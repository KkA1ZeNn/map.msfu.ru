/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_interactivemap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/interactivemap.js */ \"./src/js/modules/interactivemap.js\");\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n   const map = new _modules_interactivemap_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n   map.render();\r\n});\n\n//# sourceURL=webpack://gulp-builder-for-the-webproject/./src/js/main.js?");

/***/ }),

/***/ "./src/js/modules/interactivemap.js":
/*!******************************************!*\
  !*** ./src/js/modules/interactivemap.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ InteractiveMap; }\n/* harmony export */ });\nclass InteractiveMap {\r\n   constructor() {\r\n      this.mapData;\r\n      this.svg;\r\n      this.instance;\r\n      this.categoriesAndRoomsList;\r\n      this.choosenCategory;\r\n      this.currentFloor;\r\n      this.searchParams = ['id', 'title', 'about'];\r\n      this.baseUrl = window.location.href.split('?')[0];\r\n\r\n      this.interactiveBlock = document.createElement('div');\r\n         this.mapContainer = document.createElement('div');\r\n            this.svgContainer = document.createElement('div');\r\n            this.descriptionBlock = document.createElement('div');\r\n         this.floorSwitchingBar = document.createElement('div');\r\n            this.currentFloorNumber = document.createElement('div');\r\n            this.floorReduceBtn = document.createElement('button');\r\n            this.floorIncreaseBtn = document.createElement('button');\r\n\r\n      this.searchingBlock = document.createElement('div');\r\n         this.searchInput = document.createElement('input');\r\n         this.categoriesBlock = document.createElement('div');\r\n            this.choosenCategoryBlock = document.createElement('div'),\r\n            this.choosenCategoryTextBlock = document.createElement('div'),\r\n            this.closeChoosenCategoryButton = document.createElement('button');\r\n         this.searchResultBlock = document.createElement('div');\r\n\r\n\r\n      // Обработчик событий SVG файла для реагирования комнат на нажатие\r\n      this.svgContainer.addEventListener('click', (event) => {\r\n         const roomElement = event.target.closest('[id^=\"room\"]');\r\n         if (roomElement) {\r\n            this.selectRoom(roomElement.getAttribute('id'));\r\n         } else {\r\n            this.resetUrl();\r\n\r\n            const activeRoom = document.querySelector('[id^=\"room\"].active');\r\n            if (activeRoom) {\r\n               this.removeSelectRoom(activeRoom);\r\n            }\r\n         }\r\n      });\r\n\r\n      // Обработчик событий для тех комнат, которые появились в списке поиска\r\n      this.searchResultBlock.addEventListener('click', (event) => this.searchResultsClickHandler(event));\r\n\r\n      // Обработчики событий для смены этажа\r\n      this.floorIncreaseBtn.addEventListener('click', async () => { \r\n         await this.setFloor(this.currentFloor + 1);\r\n         const roomFromUrl = document.querySelector( '#' + this.checkURL() );\r\n         if(roomFromUrl) {\r\n            this.selectRoom(roomFromUrl.getAttribute('id'));\r\n         }\r\n      });\r\n      this.floorReduceBtn.addEventListener('click', async () => { \r\n         await this.setFloor(this.currentFloor - 1);\r\n         const roomFromUrl = document.querySelector( '#' + this.checkURL() );\r\n         if(roomFromUrl) {\r\n            this.selectRoom(roomFromUrl.getAttribute('id'));\r\n         }\r\n      });\r\n\r\n      // обработчик событий для поиска комнат по описанию\r\n      this.searchInput.addEventListener('input', this.debounce(() => { this.formSearchResultList(this.searchParams) }, 700));\r\n\r\n      this.closeChoosenCategoryButton.addEventListener('click', () => {\r\n         this.choosenCategory = \"\";\r\n         this.hide(this.choosenCategoryBlock);\r\n         this.formSearchResultList(this.searchParams);\r\n      });\r\n   }\r\n\r\n   render() {\r\n      this.injectStyle();\r\n      this.fetchingJSON();\r\n\r\n      this.interactiveBlock.append(this.mapContainer, this.floorSwitchingBar);\r\n      this.mapContainer.append(this.svgContainer, this.descriptionBlock);\r\n      this.floorSwitchingBar.append(this.currentFloorNumber, this.floorReduceBtn, this.floorIncreaseBtn);\r\n\r\n      this.searchingBlock.append(this.searchInput, this.categoriesBlock, this.searchResultBlock);\r\n      this.categoriesBlock.append(this.choosenCategoryBlock);\r\n      this.choosenCategoryBlock.append(this.choosenCategoryTextBlock, this.closeChoosenCategoryButton);\r\n\r\n      this.interactiveBlock.classList.add('interactiveBlock');\r\n      this.mapContainer.classList.add('mapContainer');\r\n      this.svgContainer.classList.add('svgConteiner');\r\n      this.descriptionBlock.classList.add('descriptionBlock');\r\n      this.floorSwitchingBar.classList.add('floorSwitchingBar');\r\n      this.currentFloorNumber.classList.add('currentFloorNumber');\r\n      this.floorReduceBtn.classList.add('floorReduceBtn');\r\n      this.floorIncreaseBtn.classList.add('floorIncreaseBtn');\r\n\r\n      this.searchingBlock.classList.add('searchingBlock');\r\n      this.searchInput.classList.add('searchInput');\r\n      this.categoriesBlock.classList.add('categoriesBlock');\r\n      this.choosenCategoryBlock.classList.add('choosenCategoryBlock','hidden');\r\n      this.choosenCategoryTextBlock.classList.add('choosenCategoryTextBlock');\r\n      this.closeChoosenCategoryButton.classList.add('closeChoosenCategoryButton');\r\n      this.searchResultBlock.classList.add('searchResultBlock');\r\n\r\n      this.floorReduceBtn.innerHTML = `-`;\r\n      this.floorIncreaseBtn.innerHTML = `+`;\r\n      this.closeChoosenCategoryButton.innerHTML = `X`;\r\n      this.searchInput.setAttribute('type', 'text');\r\n      this.searchInput.setAttribute('placeholder', 'Enter class number or name of the department');\r\n\r\n      document.querySelector(\"body\").append(this.interactiveBlock, this.searchingBlock);\r\n   }\r\n\r\n   fetchingJSON() {\r\n      fetch('../data/bmstuJson.json')\r\n      .then((response) => {\r\n         if (response.ok) {\r\n            return response;\r\n         } else {\r\n            let error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error\r\n         }\r\n      })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n         this.mapData = json;\r\n         //Формируем масси из комнат и категорий, можно вынести в отдельную функцию\r\n         this.categoriesAndRoomsList = this.mapData.categories.map(categories => ({category: categories})).concat(\r\n            this.mapData.floors.flatMap(floor => floor.locations.map(locations => ({\r\n               floor: floor.id,\r\n               room: locations\r\n         }))));\r\n\r\n         const roomIdFromUrl = this.checkURL();\r\n         if (roomIdFromUrl) {\r\n            this.selectRoom(roomIdFromUrl);\r\n         } else {\r\n            this.mapData.floors.forEach((floor, i) => {\r\n               if (floor.status === 'main floor') {\r\n                  this.setFloor(i);\r\n               }\r\n            });\r\n         }\r\n\r\n            \r\n         this.descriptionBlock.style.left = `${this.mapContainer.offsetWidth / 2 - this.descriptionBlock.offsetWidth / 2}px`;\r\n         this.descriptionBlock.style.top = `${this.mapContainer.offsetHeight / 2 - this.descriptionBlock.offsetHeight / 2}px`;\r\n\r\n         //-------- был svgContainer, но возможно тут и кроется проблема, потому что в мапплике блок с описанием и сама карта в одном блоке находятся\r\n         this.instance = panzoom(this.mapContainer, {\r\n            maxZoom: 2.5,\r\n            minZoom: 1,\r\n            zoomDoubleClickSpeed: 1,\r\n            bounds: true,\r\n            boundsPadding: 0.2,\r\n            zoomSpeed: 0.07,\r\n            onDoubleClick: () => {\r\n               this.resetZoom();\r\n            }\r\n         });\r\n         //--------\r\n         console.log('двойной клик для сброса карты');\r\n         this.formSearchResultList(this.searchParams);\r\n      })\r\n      .catch(e => {\r\n         console.log('Error: ' + e.message);\r\n      });\r\n   }\r\n\r\n   // Функция, которая отвечает за реакцию комнаты на выбор этой комнаты (нажатие или поиск). \r\n   //Проверяем, что искомая комната есть, если есть, то проверка, что это она уже не включена,  \r\n   // заполняем блок описания данными из json, смещаем блок описания\r\n   async selectRoom(roomID, flagOfUrl) {\r\n      let roomElement = document.querySelector('#' + roomID);\r\n      if (!roomElement) {\r\n         for (const floor of this.mapData.floors) {\r\n            for (const location of floor.locations) {\r\n               if (location.id.includes(roomID)) {\r\n                  await this.setFloor(this.mapData.floors.indexOf(floor));\r\n               }\r\n            }\r\n         }\r\n         roomElement = document.querySelector('#' + roomID);\r\n      };\r\n\r\n      const activeRoom = document.querySelector('[id^=\"room\"].active');   \r\n      const currentFLoorRooms =  this.mapData.floors[this.currentFloor].locations;\r\n\r\n      if (activeRoom && activeRoom !== roomElement) {\r\n         this.removeSelectRoom(activeRoom);\r\n      }\r\n\r\n      roomElement.classList.add('active');\r\n\r\n      if (!flagOfUrl) {\r\n         this.updateUrl(roomID);\r\n      }\r\n\r\n      currentFLoorRooms.forEach(room => {\r\n         if (room.id === roomID) {\r\n            this.showDescriptionBlock(roomElement, room.title, room.about);\r\n         }\r\n      });\r\n\r\n      this.zoomRoom(roomElement);\r\n   };\r\n\r\n   showDescriptionBlock(currentRoom, title, about) {\r\n      this.show(this.descriptionBlock);\r\n   \r\n      this.descriptionBlock.innerHTML =\r\n         `<h4>${title}</h4>\r\n         <p>${about}</p>`;\r\n   \r\n      // функция для считывания размера элемента и перемещения окна, но пока работает КРИВО\r\n      const roomRect = currentRoom.getBoundingClientRect();\r\n      const descriptionRect = this.descriptionBlock.getBoundingClientRect();\r\n      const currentTransform = this.instance.getTransform();\r\n\r\n      //this.descriptionBlock.style.left = `${10}px`;\r\n      //this.descriptionBlock.style.top = `${roomRect.top - this.descriptionBlock.offsetHeight + currentTransform.x + scrollY}px`;\r\n   }\r\n\r\n   //Функция зумирования на комнату, вычисляет смещение свг, так чтобы комната оказалась в центре контейнера, учитывая уже сделанное смещение, плюс производит увеличение в центр этого контейнера\r\n   zoomRoom(currentRoom) {\r\n      const roomRect = currentRoom.getBoundingClientRect();\r\n      const containerRect = this.interactiveBlock.getBoundingClientRect();\r\n\r\n      const containerCenterX = containerRect.left + (containerRect.right - containerRect.left) / 2;\r\n      const containerCenterY = containerRect.top + (containerRect.bottom - containerRect.top) / 2 + window.scrollY;\r\n      const roomCenterX = roomRect.left + (roomRect.right - roomRect.left) / 2;\r\n      const roomCenterY = roomRect.top + (roomRect.bottom - roomRect.top) / 2 + window.scrollY;\r\n      const currentTransform = this.instance.getTransform();\r\n   \r\n      const moveToX = containerCenterX - roomCenterX;\r\n      const moveToY = containerCenterY - roomCenterY;\r\n      this.descriptionBlock.style.top = `${roomRect.top - this.descriptionBlock.offsetHeight  + window.scrollY}px`;\r\n      console.log(roomRect.top - this.descriptionBlock.offsetHeight + currentTransform.y + window.scrollY)\r\n      ;\r\n      this.instance.moveTo(currentTransform.x + moveToX, currentTransform.y + moveToY);\r\n      this.instance.smoothZoom(containerRect.width / 2, containerRect.height / 2, 2.5);\r\n   }\r\n\r\n   removeSelectRoom(activeRoom) {\r\n      activeRoom.classList.remove('active');\r\n      this.hide(this.descriptionBlock);\r\n   }\r\n   \r\n   resetZoom() {\r\n      this.instance.zoomTo(0, 0, 0.4);\r\n      this.instance.moveTo(0, 0);\r\n   }\r\n\r\n   async setFloor(floor) {\r\n      let floorsList = this.mapData.floors;\r\n      \r\n      if (floor < 0 || floor >= floorsList.length) {\r\n         console.log('такого этажа нет');\r\n      } else {\r\n         try {\r\n            let response = await fetch(floorsList[floor].map);\r\n   \r\n            if (!response.ok) {\r\n               let error = new Error(response.statusText);\r\n               error.response = response;\r\n               throw error;\r\n            }\r\n   \r\n            let svg = await response.text();\r\n            this.svgContainer.innerHTML = svg;\r\n   \r\n         } catch(e) {\r\n            console.log('Error: ' + e.message);\r\n         }\r\n         \r\n         this.currentFloor = floor;\r\n         this.currentFloorNumber.textContent = floorsList[floor].title;\r\n   \r\n         this.hide(this.descriptionBlock);\r\n         this.enable(this.floorReduceBtn);\r\n         this.enable(this.floorIncreaseBtn);\r\n   \r\n         if (floor === 0) {\r\n            this.disable(this.floorReduceBtn);\r\n         } else if (floor === floorsList.length - 1) {\r\n            this.disable(this.floorIncreaseBtn);\r\n         }\r\n      }\r\n   }\r\n\r\n   formSearchResultList(parameters) {\r\n      const textInput = this.searchInput.value.toLowerCase();\r\n      let SearchResultList;\r\n   \r\n      if (this.choosenCategory) {\r\n         if (textInput === \"\") {\r\n            SearchResultList = this.categoriesAndRoomsList.filter(item => {\r\n               if (item.room && item.room.category) {\r\n                  return item.room.category === this.choosenCategory;\r\n               }\r\n            });\r\n         } else {\r\n            SearchResultList = this.categoriesAndRoomsList.filter(item => {\r\n               if (item.room && item.room.category && item.room.category === this.choosenCategory) {\r\n                  for (let i = 0; i < parameters.length; ++i) {\r\n                     if (item.room[parameters[i]] && item.room[parameters[i]].toLowerCase().includes(textInput)) {\r\n                        return true;\r\n                     }\r\n                  }\r\n               }\r\n            });\r\n         }\r\n      } else {\r\n         if (textInput === \"\") {\r\n            SearchResultList = this.mapData.categories.map(item => {\r\n               return {category: item};\r\n            });\r\n         }\r\n         else {\r\n            SearchResultList = this.categoriesAndRoomsList.filter(item => {\r\n               if(item.category) {\r\n                  for (let i = 0; i < parameters.length; ++i) {\r\n                     if (item.category[parameters[i]] && item.category[parameters[i]].toLowerCase().includes(textInput)) {\r\n                        return true;\r\n                     }\r\n                  }\r\n                  return false;\r\n               } else {\r\n                  for (let i = 0; i < parameters.length; ++i) {\r\n                     if (item.room[parameters[i]] && item.room[parameters[i]].toLowerCase().includes(textInput)) {\r\n                        return true;\r\n                     }\r\n                  }\r\n                  return false;\r\n               }\r\n            });\r\n         }\r\n      }\r\n   \r\n      this.showSearchResult(SearchResultList);\r\n   }\r\n\r\n   showSearchResult(searchResult) {\r\n      this.searchResultBlock.innerHTML = '';\r\n   \r\n      searchResult.forEach(element => {\r\n         const variant = document.createElement('button');\r\n         variant.classList.add('searchResultBlock_item');\r\n   \r\n         if (element.category) {\r\n            variant.dataset.categoryId = element.category.id;\r\n            variant.dataset.title = element.category.title;\r\n            variant.dataset.about = element.category.about;\r\n            variant.innerHTML =\r\n               `<h5>${element.category.id}</h5>\r\n               <p>${element.category.title}</p>`;\r\n         } else {\r\n            variant.dataset.floor = element.floor;\r\n            variant.dataset.room = element.room.id;\r\n            variant.innerHTML =\r\n               `<h5>${element.room.id}</h5>\r\n               <p>${element.room.title}</p>`;\r\n         }\r\n   \r\n         this.searchResultBlock.appendChild(variant);\r\n      });\r\n   }\r\n\r\n   // функция поиска комнаты после клика по кнопке комнаты в списке. Если комната на текущем этаже, то сразу ищем, если нет, то надо отрисовать нужный этаж и найти там\r\n   searchResultsClickHandler(event) {\r\n      if (event.target.tagName === 'BUTTON') {\r\n         if(event.target.dataset.categoryId) {\r\n            this.choosenCategory = event.target.dataset.categoryId;\r\n            this.searchInput.value = \"\";\r\n            this.show(this.choosenCategoryBlock);\r\n            this.formSearchResultList(this.searchParams);\r\n\r\n            this.choosenCategoryTextBlock.innerHTML =\r\n                  `<h5>${event.target.dataset.title}</h5>\r\n                  <p>${event.target.dataset.about}</p>`;\r\n         } else {\r\n            this.selectRoom(event.target.dataset.room);\r\n         }\r\n      }\r\n   }\r\n\r\n   checkURL() {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const roomIdFromUrl = urlParams.get('location');\r\n      let result;\r\n      if (roomIdFromUrl) {\r\n         this.categoriesAndRoomsList.forEach(element => {\r\n            if (element.room) {\r\n               if (element.room.id === roomIdFromUrl) {\r\n                  result = roomIdFromUrl;\r\n               }\r\n            }\r\n         });\r\n   \r\n         if (!result) {\r\n            console.log('Такой комнаты нет');\r\n         }\r\n      } \r\n      \r\n      return result;\r\n   }\r\n\r\n   // Функции для обновления и сброса URL при поиске комнат\r\n   updateUrl(roomId) {\r\n      const newUrl = this.baseUrl + '?location=' + roomId;\r\n      history.replaceState( { roomId } , '', newUrl);\r\n   }\r\n   resetUrl() {\r\n      history.replaceState( { roomId: null } , '', this.baseUrl);\r\n   }\r\n\r\n   // функции скрытия и показывания элемента\r\n   disable(element) {\r\n      element.disabled = true;\r\n   }\r\n   enable(element) {\r\n      element.disabled = false;\r\n   }\r\n\r\n   hide(element) {\r\n      element.classList.add('hidden');\r\n   }\r\n   show(element) {\r\n      element.classList.remove('hidden');\r\n   }\r\n\r\n   //Функция для создания задержки вызова другой функции\r\n   debounce(func, ms) {\r\n      let timeout;\r\n\r\n      return function() {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, arguments), ms);\r\n      };\r\n   }\r\n\r\n   injectStyle() {\r\n      const style = document.createElement('style');\r\n      style.innerHTML = `\r\n         /*стили для контейнера с самой картой*/\r\n         .interactiveBlock {\r\n            position: absolute;\r\n            width: 1000px;\r\n            height: 500px;\r\n            border: 3px solid black;\r\n            left: 25%;\r\n         }\r\n\r\n         .mapContainer {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n            overflow: hidden;\r\n            margin: auto;\r\n         }\r\n\r\n         .svgConteiner {\r\n            width: 100%;\r\n            height: 100%;\r\n            max-height: 500px;\r\n            display: flex;\r\n            justify-content: center;\r\n            transition: 0.1s;\r\n            overflow: hidden;\r\n            border: 2px solid red;\r\n            box-sizing: border-box;\r\n         }\r\n\r\n         /*стили для блока с информацией*/\r\n         .descriptionBlock {\r\n            background-color: #fff;\r\n            box-shadow: 0 0 20px rgba(0,0,0,0.15);\r\n            pointer-events: auto;\r\n            padding: 16px;\r\n            width: 300px;\r\n            height: 100px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            justify-content: flex-start;\r\n            position: absolute;\r\n         }\r\n         .descriptionBlock.hidden{\r\n            display: none !important;\r\n         }\r\n         .descriptionBlock h4 {\r\n            font-family: Roboto, Tahoma, Helvetica, sans-serif;\r\n            font-size: 16px;\r\n            margin: 0;\r\n            color: #333;\r\n            font-weight: bold;\r\n            margin-bottom: 15px;\r\n         }\r\n         .descriptionBlock p {\r\n            font-family: Roboto, Tahoma, Helvetica, sans-serif;\r\n            font-size: 13px;\r\n            margin: 0;\r\n            color: #333;\r\n         }\r\n\r\n         .searchingBlock {\r\n            position: absolute;\r\n            width: 450px;\r\n            height: 500px;\r\n            border: 3px solid black;\r\n            left: 10px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: start;\r\n         }\r\n\r\n         .searchInput {\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            height: 30px;\r\n         }\r\n\r\n         /*стили для блока с категориями и элементов списка*/\r\n         .categoriesBlock {\r\n            height: auto;\r\n            width: 100%;\r\n            min-height: 50px;\r\n            background-color: orange;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            box-sizing: border-box;\r\n         }\r\n\r\n         .choosenCategoryBlock{\r\n            height: 40px;\r\n            width: 250px;\r\n            background-color: #fff;\r\n            border-radius: 20px;\r\n            border: 2px solid black;\r\n            box-sizing: border-box;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n         }\r\n         \r\n         .choosenCategoryBlock.hidden {\r\n            display: none;\r\n         }\r\n         \r\n         .choosenCategoryTextBlock {\r\n            width: auto;\r\n            height: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n         }\r\n         .choosenCategoryTextBlock p {\r\n            margin: 0;\r\n            width: auto;\r\n            font-size: 11px;\r\n         }\r\n         .choosenCategoryTextBlock h5 {\r\n            margin: 0 10px 0 10px;\r\n         }\r\n         \r\n         .closeChoosenCategoryButton {\r\n            width: 20px;\r\n            height: 20px;\r\n            margin: 0px 5px;\r\n            border-radius: 5px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            cursor: pointer;\r\n         }\r\n\r\n         /*стили блока с подсказками для поиска*/\r\n         .searchResultBlock {\r\n            width: 100%;\r\n            height: 420px;\r\n            background-color: yellow;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            justify-content: start;\r\n            overflow-y: auto;\r\n         }\r\n\r\n         .searchResultBlock_item {\r\n            width: 100%;\r\n            min-height: 50px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 0 10px;\r\n            box-sizing: border-box;\r\n            color: black;\r\n            border: 3px solid green;\r\n            background-color: lightblue;\r\n            cursor: pointer;\r\n         }\r\n\r\n         .floorSwitchingBar {\r\n            position: absolute;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-around;\r\n            width: 150px;\r\n            height: 40px;\r\n            background-color: yellow;\r\n            bottom: 0px;\r\n            right: 0px;\r\n            z-index: 10;\r\n         }\r\n\r\n         /*стили для кнопок + и -, включенных и отключенных*/\r\n         .floorIncreaseBtn, .floorReduceBtn {\r\n            cursor: pointer;\r\n            width: 30px;\r\n            height: 30px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            font-size: 20px;\r\n            padding: 0;\r\n         }\r\n\r\n         .currentFloorNumber {\r\n            width: 80px;\r\n            height: 30px;\r\n            font-size: 12px;\r\n            background-color: white;\r\n            border: 1px solid black;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n         }\r\n\r\n         /*стили для комнат при наведении*/\r\n         [id^=\"room-\"]:hover polygon {\r\n            filter: brightness(1.15);\r\n            cursor: pointer;\r\n         }\r\n\r\n         /*отключаем курсор на тексте комнат*/\r\n         [id^=\"Текст\"] * {\r\n            pointer-events: none;\r\n         }\r\n\r\n         /*стили для нажатых комнат*/\r\n         .active polygon{\r\n            filter: brightness(0.8) hue-rotate(90deg) !important;\r\n         }\r\n      `;\r\n      document.querySelector('head').appendChild(style);\r\n   }\r\n}\n\n//# sourceURL=webpack://gulp-builder-for-the-webproject/./src/js/modules/interactivemap.js?");

/***/ }),

/***/ "./src/js/modules/panzoom.min.js":
/*!***************************************!*\
  !*** ./src/js/modules/panzoom.min.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.panzoom=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var wheel=require(\"wheel\");var animate=require(\"amator\");var eventify=require(\"ngraph.events\");var kinetic=require(\"./lib/kinetic.js\");var createTextSelectionInterceptor=require(\"./lib/createTextSelectionInterceptor.js\");var domTextSelectionInterceptor=createTextSelectionInterceptor();var fakeTextSelectorInterceptor=createTextSelectionInterceptor(true);var Transform=require(\"./lib/transform.js\");var makeSvgController=require(\"./lib/svgController.js\");var makeDomController=require(\"./lib/domController.js\");var defaultZoomSpeed=1;var defaultDoubleTapZoomSpeed=1.75;var doubleTapSpeedInMS=300;module.exports=createPanZoom;function createPanZoom(domElement,options){options=options||{};var panController=options.controller;if(!panController){if(makeSvgController.canAttach(domElement)){panController=makeSvgController(domElement,options)}else if(makeDomController.canAttach(domElement)){panController=makeDomController(domElement,options)}}if(!panController){throw new Error(\"Cannot create panzoom for the current type of dom element\")}var owner=panController.getOwner();var storedCTMResult={x:0,y:0};var isDirty=false;var transform=new Transform;if(panController.initTransform){panController.initTransform(transform)}var filterKey=typeof options.filterKey===\"function\"?options.filterKey:noop;var pinchSpeed=typeof options.pinchSpeed===\"number\"?options.pinchSpeed:1;var bounds=options.bounds;var maxZoom=typeof options.maxZoom===\"number\"?options.maxZoom:Number.POSITIVE_INFINITY;var minZoom=typeof options.minZoom===\"number\"?options.minZoom:0;var boundsPadding=typeof options.boundsPadding===\"number\"?options.boundsPadding:.05;var zoomDoubleClickSpeed=typeof options.zoomDoubleClickSpeed===\"number\"?options.zoomDoubleClickSpeed:defaultDoubleTapZoomSpeed;var beforeWheel=options.beforeWheel||noop;var beforeMouseDown=options.beforeMouseDown||noop;var speed=typeof options.zoomSpeed===\"number\"?options.zoomSpeed:defaultZoomSpeed;var transformOrigin=parseTransformOrigin(options.transformOrigin);var textSelection=options.enableTextSelection?fakeTextSelectorInterceptor:domTextSelectionInterceptor;validateBounds(bounds);if(options.autocenter){autocenter()}var frameAnimation;var lastTouchEndTime=0;var lastSingleFingerOffset;var touchInProgress=false;var panstartFired=false;var mouseX;var mouseY;var pinchZoomLength;var smoothScroll;if(\"smoothScroll\"in options&&!options.smoothScroll){smoothScroll=rigidScroll()}else{smoothScroll=kinetic(getPoint,scroll,options.smoothScroll)}var moveByAnimation;var zoomToAnimation;var multiTouch;var paused=false;listenForEvents();var api={dispose:dispose,moveBy:internalMoveBy,moveTo:moveTo,smoothMoveTo:smoothMoveTo,centerOn:centerOn,zoomTo:publicZoomTo,zoomAbs:zoomAbs,smoothZoom:smoothZoom,smoothZoomAbs:smoothZoomAbs,showRectangle:showRectangle,pause:pause,resume:resume,isPaused:isPaused,getTransform:getTransformModel,getMinZoom:getMinZoom,setMinZoom:setMinZoom,getMaxZoom:getMaxZoom,setMaxZoom:setMaxZoom,getTransformOrigin:getTransformOrigin,setTransformOrigin:setTransformOrigin,getZoomSpeed:getZoomSpeed,setZoomSpeed:setZoomSpeed};eventify(api);var initialX=typeof options.initialX===\"number\"?options.initialX:transform.x;var initialY=typeof options.initialY===\"number\"?options.initialY:transform.y;var initialZoom=typeof options.initialZoom===\"number\"?options.initialZoom:transform.scale;if(initialX!=transform.x||initialY!=transform.y||initialZoom!=transform.Scale){zoomAbs(initialX,initialY,initialZoom)}return api;function pause(){releaseEvents();paused=true}function resume(){if(paused){listenForEvents();paused=false}}function isPaused(){return paused}function showRectangle(rect){var clientRect=owner.getBoundingClientRect();var size=transformToScreen(clientRect.width,clientRect.height);var rectWidth=rect.right-rect.left;var rectHeight=rect.bottom-rect.top;if(!Number.isFinite(rectWidth)||!Number.isFinite(rectHeight)){throw new Error(\"Invalid rectangle\")}var dw=size.x/rectWidth;var dh=size.y/rectHeight;var scale=Math.min(dw,dh);transform.x=-(rect.left+rectWidth/2)*scale+size.x/2;transform.y=-(rect.top+rectHeight/2)*scale+size.y/2;transform.scale=scale}function transformToScreen(x,y){if(panController.getScreenCTM){var parentCTM=panController.getScreenCTM();var parentScaleX=parentCTM.a;var parentScaleY=parentCTM.d;var parentOffsetX=parentCTM.e;var parentOffsetY=parentCTM.f;storedCTMResult.x=x*parentScaleX-parentOffsetX;storedCTMResult.y=y*parentScaleY-parentOffsetY}else{storedCTMResult.x=x;storedCTMResult.y=y}return storedCTMResult}function autocenter(){var w;var h;var left=0;var top=0;var sceneBoundingBox=getBoundingBox();if(sceneBoundingBox){left=sceneBoundingBox.left;top=sceneBoundingBox.top;w=sceneBoundingBox.right-sceneBoundingBox.left;h=sceneBoundingBox.bottom-sceneBoundingBox.top}else{var ownerRect=owner.getBoundingClientRect();w=ownerRect.width;h=ownerRect.height}var bbox=panController.getBBox();if(bbox.width===0||bbox.height===0){return}var dh=h/bbox.height;var dw=w/bbox.width;var scale=Math.min(dw,dh);transform.x=-(bbox.left+bbox.width/2)*scale+w/2+left;transform.y=-(bbox.top+bbox.height/2)*scale+h/2+top;transform.scale=scale}function getTransformModel(){return transform}function getMinZoom(){return minZoom}function setMinZoom(newMinZoom){minZoom=newMinZoom}function getMaxZoom(){return maxZoom}function setMaxZoom(newMaxZoom){maxZoom=newMaxZoom}function getTransformOrigin(){return transformOrigin}function setTransformOrigin(newTransformOrigin){transformOrigin=parseTransformOrigin(newTransformOrigin)}function getZoomSpeed(){return speed}function setZoomSpeed(newSpeed){if(!Number.isFinite(newSpeed)){throw new Error(\"Zoom speed should be a number\")}speed=newSpeed}function getPoint(){return{x:transform.x,y:transform.y}}function moveTo(x,y){transform.x=x;transform.y=y;keepTransformInsideBounds();triggerEvent(\"pan\");makeDirty()}function moveBy(dx,dy){moveTo(transform.x+dx,transform.y+dy)}function keepTransformInsideBounds(){var boundingBox=getBoundingBox();if(!boundingBox)return;var adjusted=false;var clientRect=getClientRect();var diff=boundingBox.left-clientRect.right;if(diff>0){transform.x+=diff;adjusted=true}diff=boundingBox.right-clientRect.left;if(diff<0){transform.x+=diff;adjusted=true}diff=boundingBox.top-clientRect.bottom;if(diff>0){transform.y+=diff;adjusted=true}diff=boundingBox.bottom-clientRect.top;if(diff<0){transform.y+=diff;adjusted=true}return adjusted}function getBoundingBox(){if(!bounds)return;if(typeof bounds===\"boolean\"){var ownerRect=owner.getBoundingClientRect();var sceneWidth=ownerRect.width;var sceneHeight=ownerRect.height;return{left:sceneWidth*boundsPadding,top:sceneHeight*boundsPadding,right:sceneWidth*(1-boundsPadding),bottom:sceneHeight*(1-boundsPadding)}}return bounds}function getClientRect(){var bbox=panController.getBBox();var leftTop=client(bbox.left,bbox.top);return{left:leftTop.x,top:leftTop.y,right:bbox.width*transform.scale+leftTop.x,bottom:bbox.height*transform.scale+leftTop.y}}function client(x,y){return{x:x*transform.scale+transform.x,y:y*transform.scale+transform.y}}function makeDirty(){isDirty=true;frameAnimation=window.requestAnimationFrame(frame)}function zoomByRatio(clientX,clientY,ratio){if(isNaN(clientX)||isNaN(clientY)||isNaN(ratio)){throw new Error(\"zoom requires valid numbers\")}var newScale=transform.scale*ratio;if(newScale<minZoom){if(transform.scale===minZoom)return;ratio=minZoom/transform.scale}if(newScale>maxZoom){if(transform.scale===maxZoom)return;ratio=maxZoom/transform.scale}var size=transformToScreen(clientX,clientY);transform.x=size.x-ratio*(size.x-transform.x);transform.y=size.y-ratio*(size.y-transform.y);if(bounds&&boundsPadding===1&&minZoom===1){transform.scale*=ratio;keepTransformInsideBounds()}else{var transformAdjusted=keepTransformInsideBounds();if(!transformAdjusted)transform.scale*=ratio}triggerEvent(\"zoom\");makeDirty()}function zoomAbs(clientX,clientY,zoomLevel){var ratio=zoomLevel/transform.scale;zoomByRatio(clientX,clientY,ratio)}function centerOn(ui){var parent=ui.ownerSVGElement;if(!parent)throw new Error(\"ui element is required to be within the scene\");var clientRect=ui.getBoundingClientRect();var cx=clientRect.left+clientRect.width/2;var cy=clientRect.top+clientRect.height/2;var container=parent.getBoundingClientRect();var dx=container.width/2-cx;var dy=container.height/2-cy;internalMoveBy(dx,dy,true)}function smoothMoveTo(x,y){internalMoveBy(x-transform.x,y-transform.y,true)}function internalMoveBy(dx,dy,smooth){if(!smooth){return moveBy(dx,dy)}if(moveByAnimation)moveByAnimation.cancel();var from={x:0,y:0};var to={x:dx,y:dy};var lastX=0;var lastY=0;moveByAnimation=animate(from,to,{step:function(v){moveBy(v.x-lastX,v.y-lastY);lastX=v.x;lastY=v.y}})}function scroll(x,y){cancelZoomAnimation();moveTo(x,y)}function dispose(){releaseEvents()}function listenForEvents(){owner.addEventListener(\"mousedown\",onMouseDown,{passive:false});owner.addEventListener(\"dblclick\",onDoubleClick,{passive:false});owner.addEventListener(\"touchstart\",onTouch,{passive:false});owner.addEventListener(\"keydown\",onKeyDown,{passive:false});wheel.addWheelListener(owner,onMouseWheel,{passive:false});makeDirty()}function releaseEvents(){wheel.removeWheelListener(owner,onMouseWheel);owner.removeEventListener(\"mousedown\",onMouseDown);owner.removeEventListener(\"keydown\",onKeyDown);owner.removeEventListener(\"dblclick\",onDoubleClick);owner.removeEventListener(\"touchstart\",onTouch);if(frameAnimation){window.cancelAnimationFrame(frameAnimation);frameAnimation=0}smoothScroll.cancel();releaseDocumentMouse();releaseTouches();textSelection.release();triggerPanEnd()}function frame(){if(isDirty)applyTransform()}function applyTransform(){isDirty=false;panController.applyTransform(transform);triggerEvent(\"transform\");frameAnimation=0}function onKeyDown(e){var x=0,y=0,z=0;if(e.keyCode===38){y=1}else if(e.keyCode===40){y=-1}else if(e.keyCode===37){x=1}else if(e.keyCode===39){x=-1}else if(e.keyCode===189||e.keyCode===109){z=1}else if(e.keyCode===187||e.keyCode===107){z=-1}if(filterKey(e,x,y,z)){return}if(x||y){e.preventDefault();e.stopPropagation();var clientRect=owner.getBoundingClientRect();var offset=Math.min(clientRect.width,clientRect.height);var moveSpeedRatio=.05;var dx=offset*moveSpeedRatio*x;var dy=offset*moveSpeedRatio*y;internalMoveBy(dx,dy)}if(z){var scaleMultiplier=getScaleMultiplier(z*100);var offset=transformOrigin?getTransformOriginOffset():midPoint();publicZoomTo(offset.x,offset.y,scaleMultiplier)}}function midPoint(){var ownerRect=owner.getBoundingClientRect();return{x:ownerRect.width/2,y:ownerRect.height/2}}function onTouch(e){beforeTouch(e);if(e.touches.length===1){return handleSingleFingerTouch(e,e.touches[0])}else if(e.touches.length===2){pinchZoomLength=getPinchZoomLength(e.touches[0],e.touches[1]);multiTouch=true;startTouchListenerIfNeeded()}}function beforeTouch(e){if(options.onTouch&&!options.onTouch(e)){return}e.stopPropagation();e.preventDefault()}function beforeDoubleClick(e){if(options.onDoubleClick&&!options.onDoubleClick(e)){return}e.preventDefault();e.stopPropagation()}function handleSingleFingerTouch(e){var touch=e.touches[0];var offset=getOffsetXY(touch);lastSingleFingerOffset=offset;var point=transformToScreen(offset.x,offset.y);mouseX=point.x;mouseY=point.y;smoothScroll.cancel();startTouchListenerIfNeeded()}function startTouchListenerIfNeeded(){if(touchInProgress){return}touchInProgress=true;document.addEventListener(\"touchmove\",handleTouchMove);document.addEventListener(\"touchend\",handleTouchEnd);document.addEventListener(\"touchcancel\",handleTouchEnd)}function handleTouchMove(e){if(e.touches.length===1){e.stopPropagation();var touch=e.touches[0];var offset=getOffsetXY(touch);var point=transformToScreen(offset.x,offset.y);var dx=point.x-mouseX;var dy=point.y-mouseY;if(dx!==0&&dy!==0){triggerPanStart()}mouseX=point.x;mouseY=point.y;internalMoveBy(dx,dy)}else if(e.touches.length===2){multiTouch=true;var t1=e.touches[0];var t2=e.touches[1];var currentPinchLength=getPinchZoomLength(t1,t2);var scaleMultiplier=1+(currentPinchLength/pinchZoomLength-1)*pinchSpeed;var firstTouchPoint=getOffsetXY(t1);var secondTouchPoint=getOffsetXY(t2);mouseX=(firstTouchPoint.x+secondTouchPoint.x)/2;mouseY=(firstTouchPoint.y+secondTouchPoint.y)/2;if(transformOrigin){var offset=getTransformOriginOffset();mouseX=offset.x;mouseY=offset.y}publicZoomTo(mouseX,mouseY,scaleMultiplier);pinchZoomLength=currentPinchLength;e.stopPropagation();e.preventDefault()}}function handleTouchEnd(e){if(e.touches.length>0){var offset=getOffsetXY(e.touches[0]);var point=transformToScreen(offset.x,offset.y);mouseX=point.x;mouseY=point.y}else{var now=new Date;if(now-lastTouchEndTime<doubleTapSpeedInMS){if(transformOrigin){var offset=getTransformOriginOffset();smoothZoom(offset.x,offset.y,zoomDoubleClickSpeed)}else{smoothZoom(lastSingleFingerOffset.x,lastSingleFingerOffset.y,zoomDoubleClickSpeed)}}lastTouchEndTime=now;triggerPanEnd();releaseTouches()}}function getPinchZoomLength(finger1,finger2){var dx=finger1.clientX-finger2.clientX;var dy=finger1.clientY-finger2.clientY;return Math.sqrt(dx*dx+dy*dy)}function onDoubleClick(e){beforeDoubleClick(e);var offset=getOffsetXY(e);if(transformOrigin){offset=getTransformOriginOffset()}smoothZoom(offset.x,offset.y,zoomDoubleClickSpeed)}function onMouseDown(e){if(beforeMouseDown(e))return;if(touchInProgress){e.stopPropagation();return false}var isLeftButton=e.button===1&&window.event!==null||e.button===0;if(!isLeftButton)return;smoothScroll.cancel();var offset=getOffsetXY(e);var point=transformToScreen(offset.x,offset.y);mouseX=point.x;mouseY=point.y;document.addEventListener(\"mousemove\",onMouseMove);document.addEventListener(\"mouseup\",onMouseUp);textSelection.capture(e.target||e.srcElement);return false}function onMouseMove(e){if(touchInProgress)return;triggerPanStart();var offset=getOffsetXY(e);var point=transformToScreen(offset.x,offset.y);var dx=point.x-mouseX;var dy=point.y-mouseY;mouseX=point.x;mouseY=point.y;internalMoveBy(dx,dy)}function onMouseUp(){textSelection.release();triggerPanEnd();releaseDocumentMouse()}function releaseDocumentMouse(){document.removeEventListener(\"mousemove\",onMouseMove);document.removeEventListener(\"mouseup\",onMouseUp);panstartFired=false}function releaseTouches(){document.removeEventListener(\"touchmove\",handleTouchMove);document.removeEventListener(\"touchend\",handleTouchEnd);document.removeEventListener(\"touchcancel\",handleTouchEnd);panstartFired=false;multiTouch=false;touchInProgress=false}function onMouseWheel(e){if(beforeWheel(e))return;smoothScroll.cancel();var delta=e.deltaY;if(e.deltaMode>0)delta*=100;var scaleMultiplier=getScaleMultiplier(delta);if(scaleMultiplier!==1){var offset=transformOrigin?getTransformOriginOffset():getOffsetXY(e);publicZoomTo(offset.x,offset.y,scaleMultiplier);e.preventDefault()}}function getOffsetXY(e){var offsetX,offsetY;var ownerRect=owner.getBoundingClientRect();offsetX=e.clientX-ownerRect.left;offsetY=e.clientY-ownerRect.top;return{x:offsetX,y:offsetY}}function smoothZoom(clientX,clientY,scaleMultiplier){var fromValue=transform.scale;var from={scale:fromValue};var to={scale:scaleMultiplier*fromValue};smoothScroll.cancel();cancelZoomAnimation();zoomToAnimation=animate(from,to,{step:function(v){zoomAbs(clientX,clientY,v.scale)},done:triggerZoomEnd})}function smoothZoomAbs(clientX,clientY,toScaleValue){var fromValue=transform.scale;var from={scale:fromValue};var to={scale:toScaleValue};smoothScroll.cancel();cancelZoomAnimation();zoomToAnimation=animate(from,to,{step:function(v){zoomAbs(clientX,clientY,v.scale)}})}function getTransformOriginOffset(){var ownerRect=owner.getBoundingClientRect();return{x:ownerRect.width*transformOrigin.x,y:ownerRect.height*transformOrigin.y}}function publicZoomTo(clientX,clientY,scaleMultiplier){smoothScroll.cancel();cancelZoomAnimation();return zoomByRatio(clientX,clientY,scaleMultiplier)}function cancelZoomAnimation(){if(zoomToAnimation){zoomToAnimation.cancel();zoomToAnimation=null}}function getScaleMultiplier(delta){var sign=Math.sign(delta);var deltaAdjustedSpeed=Math.min(.25,Math.abs(speed*delta/128));return 1-sign*deltaAdjustedSpeed}function triggerPanStart(){if(!panstartFired){triggerEvent(\"panstart\");panstartFired=true;smoothScroll.start()}}function triggerPanEnd(){if(panstartFired){if(!multiTouch)smoothScroll.stop();triggerEvent(\"panend\")}}function triggerZoomEnd(){triggerEvent(\"zoomend\")}function triggerEvent(name){api.fire(name,api)}}function parseTransformOrigin(options){if(!options)return;if(typeof options===\"object\"){if(!isNumber(options.x)||!isNumber(options.y))failTransformOrigin(options);return options}failTransformOrigin()}function failTransformOrigin(options){console.error(options);throw new Error([\"Cannot parse transform origin.\",\"Some good examples:\",'  \"center center\" can be achieved with {x: 0.5, y: 0.5}','  \"top center\" can be achieved with {x: 0.5, y: 0}','  \"bottom right\" can be achieved with {x: 1, y: 1}'].join(\"\\n\"))}function noop(){}function validateBounds(bounds){var boundsType=typeof bounds;if(boundsType===\"undefined\"||boundsType===\"boolean\")return;var validBounds=isNumber(bounds.left)&&isNumber(bounds.top)&&isNumber(bounds.bottom)&&isNumber(bounds.right);if(!validBounds)throw new Error(\"Bounds object is not valid. It can be: \"+\"undefined, boolean (true|false) or an object {left, top, right, bottom}\")}function isNumber(x){return Number.isFinite(x)}function isNaN(value){if(Number.isNaN){return Number.isNaN(value)}return value!==value}function rigidScroll(){return{start:noop,stop:noop,cancel:noop}}function autoRun(){if(typeof document===\"undefined\")return;var scripts=document.getElementsByTagName(\"script\");if(!scripts)return;var panzoomScript;for(var i=0;i<scripts.length;++i){var x=scripts[i];if(x.src&&x.src.match(/\\bpanzoom(\\.min)?\\.js/)){panzoomScript=x;break}}if(!panzoomScript)return;var query=panzoomScript.getAttribute(\"query\");if(!query)return;var globalName=panzoomScript.getAttribute(\"name\")||\"pz\";var started=Date.now();tryAttach();function tryAttach(){var el=document.querySelector(query);if(!el){var now=Date.now();var elapsed=now-started;if(elapsed<2e3){setTimeout(tryAttach,100);return}console.error(\"Cannot find the panzoom element\",globalName);return}var options=collectOptions(panzoomScript);console.log(options);window[globalName]=createPanZoom(el,options)}function collectOptions(script){var attrs=script.attributes;var options={};for(var i=0;i<attrs.length;++i){var attr=attrs[i];var nameValue=getPanzoomAttributeNameValue(attr);if(nameValue){options[nameValue.name]=nameValue.value}}return options}function getPanzoomAttributeNameValue(attr){if(!attr.name)return;var isPanZoomAttribute=attr.name[0]===\"p\"&&attr.name[1]===\"z\"&&attr.name[2]===\"-\";if(!isPanZoomAttribute)return;var name=attr.name.substr(3);var value=JSON.parse(attr.value);return{name:name,value:value}}}autoRun()},{\"./lib/createTextSelectionInterceptor.js\":2,\"./lib/domController.js\":3,\"./lib/kinetic.js\":4,\"./lib/svgController.js\":5,\"./lib/transform.js\":6,amator:7,\"ngraph.events\":9,wheel:10}],2:[function(require,module,exports){module.exports=createTextSelectionInterceptor;function createTextSelectionInterceptor(useFake){if(useFake){return{capture:noop,release:noop}}var dragObject;var prevSelectStart;var prevDragStart;var wasCaptured=false;return{capture:capture,release:release};function capture(domObject){wasCaptured=true;prevSelectStart=window.document.onselectstart;prevDragStart=window.document.ondragstart;window.document.onselectstart=disabled;dragObject=domObject;dragObject.ondragstart=disabled}function release(){if(!wasCaptured)return;wasCaptured=false;window.document.onselectstart=prevSelectStart;if(dragObject)dragObject.ondragstart=prevDragStart}}function disabled(e){e.stopPropagation();return false}function noop(){}},{}],3:[function(require,module,exports){module.exports=makeDomController;module.exports.canAttach=isDomElement;function makeDomController(domElement,options){var elementValid=isDomElement(domElement);if(!elementValid){throw new Error(\"panzoom requires DOM element to be attached to the DOM tree\")}var owner=domElement.parentElement;domElement.scrollTop=0;if(!options.disableKeyboardInteraction){owner.setAttribute(\"tabindex\",0)}var api={getBBox:getBBox,getOwner:getOwner,applyTransform:applyTransform};return api;function getOwner(){return owner}function getBBox(){return{left:0,top:0,width:domElement.clientWidth,height:domElement.clientHeight}}function applyTransform(transform){domElement.style.transformOrigin=\"0 0 0\";domElement.style.transform=\"matrix(\"+transform.scale+\", 0, 0, \"+transform.scale+\", \"+transform.x+\", \"+transform.y+\")\"}}function isDomElement(element){return element&&element.parentElement&&element.style}},{}],4:[function(require,module,exports){module.exports=kinetic;function kinetic(getPoint,scroll,settings){if(typeof settings!==\"object\"){settings={}}var minVelocity=typeof settings.minVelocity===\"number\"?settings.minVelocity:5;var amplitude=typeof settings.amplitude===\"number\"?settings.amplitude:.25;var cancelAnimationFrame=typeof settings.cancelAnimationFrame===\"function\"?settings.cancelAnimationFrame:getCancelAnimationFrame();var requestAnimationFrame=typeof settings.requestAnimationFrame===\"function\"?settings.requestAnimationFrame:getRequestAnimationFrame();var lastPoint;var timestamp;var timeConstant=342;var ticker;var vx,targetX,ax;var vy,targetY,ay;var raf;return{start:start,stop:stop,cancel:dispose};function dispose(){cancelAnimationFrame(ticker);cancelAnimationFrame(raf)}function start(){lastPoint=getPoint();ax=ay=vx=vy=0;timestamp=new Date;cancelAnimationFrame(ticker);cancelAnimationFrame(raf);ticker=requestAnimationFrame(track)}function track(){var now=Date.now();var elapsed=now-timestamp;timestamp=now;var currentPoint=getPoint();var dx=currentPoint.x-lastPoint.x;var dy=currentPoint.y-lastPoint.y;lastPoint=currentPoint;var dt=1e3/(1+elapsed);vx=.8*dx*dt+.2*vx;vy=.8*dy*dt+.2*vy;ticker=requestAnimationFrame(track)}function stop(){cancelAnimationFrame(ticker);cancelAnimationFrame(raf);var currentPoint=getPoint();targetX=currentPoint.x;targetY=currentPoint.y;timestamp=Date.now();if(vx<-minVelocity||vx>minVelocity){ax=amplitude*vx;targetX+=ax}if(vy<-minVelocity||vy>minVelocity){ay=amplitude*vy;targetY+=ay}raf=requestAnimationFrame(autoScroll)}function autoScroll(){var elapsed=Date.now()-timestamp;var moving=false;var dx=0;var dy=0;if(ax){dx=-ax*Math.exp(-elapsed/timeConstant);if(dx>.5||dx<-.5)moving=true;else dx=ax=0}if(ay){dy=-ay*Math.exp(-elapsed/timeConstant);if(dy>.5||dy<-.5)moving=true;else dy=ay=0}if(moving){scroll(targetX+dx,targetY+dy);raf=requestAnimationFrame(autoScroll)}}}function getCancelAnimationFrame(){if(typeof cancelAnimationFrame===\"function\")return cancelAnimationFrame;return clearTimeout}function getRequestAnimationFrame(){if(typeof requestAnimationFrame===\"function\")return requestAnimationFrame;return function(handler){return setTimeout(handler,16)}}},{}],5:[function(require,module,exports){module.exports=makeSvgController;module.exports.canAttach=isSVGElement;function makeSvgController(svgElement,options){if(!isSVGElement(svgElement)){throw new Error(\"svg element is required for svg.panzoom to work\")}var owner=svgElement.ownerSVGElement;if(!owner){throw new Error(\"Do not apply panzoom to the root <svg> element. \"+\"Use its child instead (e.g. <g></g>). \"+\"As of March 2016 only FireFox supported transform on the root element\")}if(!options.disableKeyboardInteraction){owner.setAttribute(\"tabindex\",0)}var api={getBBox:getBBox,getScreenCTM:getScreenCTM,getOwner:getOwner,applyTransform:applyTransform,initTransform:initTransform};return api;function getOwner(){return owner}function getBBox(){var bbox=svgElement.getBBox();return{left:bbox.x,top:bbox.y,width:bbox.width,height:bbox.height}}function getScreenCTM(){var ctm=owner.getCTM();if(!ctm){return owner.getScreenCTM()}return ctm}function initTransform(transform){var screenCTM=svgElement.getCTM();if(screenCTM===null){screenCTM=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\").createSVGMatrix()}transform.x=screenCTM.e;transform.y=screenCTM.f;transform.scale=screenCTM.a;owner.removeAttributeNS(null,\"viewBox\")}function applyTransform(transform){svgElement.setAttribute(\"transform\",\"matrix(\"+transform.scale+\" 0 0 \"+transform.scale+\" \"+transform.x+\" \"+transform.y+\")\")}}function isSVGElement(element){return element&&element.ownerSVGElement&&element.getCTM}},{}],6:[function(require,module,exports){module.exports=Transform;function Transform(){this.x=0;this.y=0;this.scale=1}},{}],7:[function(require,module,exports){var BezierEasing=require(\"bezier-easing\");var animations={ease:BezierEasing(.25,.1,.25,1),easeIn:BezierEasing(.42,0,1,1),easeOut:BezierEasing(0,0,.58,1),easeInOut:BezierEasing(.42,0,.58,1),linear:BezierEasing(0,0,1,1)};module.exports=animate;module.exports.makeAggregateRaf=makeAggregateRaf;module.exports.sharedScheduler=makeAggregateRaf();function animate(source,target,options){var start=Object.create(null);var diff=Object.create(null);options=options||{};var easing=typeof options.easing===\"function\"?options.easing:animations[options.easing];if(!easing){if(options.easing){console.warn(\"Unknown easing function in amator: \"+options.easing)}easing=animations.ease}var step=typeof options.step===\"function\"?options.step:noop;var done=typeof options.done===\"function\"?options.done:noop;var scheduler=getScheduler(options.scheduler);var keys=Object.keys(target);keys.forEach(function(key){start[key]=source[key];diff[key]=target[key]-source[key]});var durationInMs=typeof options.duration===\"number\"?options.duration:400;var durationInFrames=Math.max(1,durationInMs*.06);var previousAnimationId;var frame=0;previousAnimationId=scheduler.next(loop);return{cancel:cancel};function cancel(){scheduler.cancel(previousAnimationId);previousAnimationId=0}function loop(){var t=easing(frame/durationInFrames);frame+=1;setValues(t);if(frame<=durationInFrames){previousAnimationId=scheduler.next(loop);step(source)}else{previousAnimationId=0;setTimeout(function(){done(source)},0)}}function setValues(t){keys.forEach(function(key){source[key]=diff[key]*t+start[key]})}}function noop(){}function getScheduler(scheduler){if(!scheduler){var canRaf=typeof window!==\"undefined\"&&window.requestAnimationFrame;return canRaf?rafScheduler():timeoutScheduler()}if(typeof scheduler.next!==\"function\")throw new Error(\"Scheduler is supposed to have next(cb) function\");if(typeof scheduler.cancel!==\"function\")throw new Error(\"Scheduler is supposed to have cancel(handle) function\");return scheduler}function rafScheduler(){return{next:window.requestAnimationFrame.bind(window),cancel:window.cancelAnimationFrame.bind(window)}}function timeoutScheduler(){return{next:function(cb){return setTimeout(cb,1e3/60)},cancel:function(id){return clearTimeout(id)}}}function makeAggregateRaf(){var frontBuffer=new Set;var backBuffer=new Set;var frameToken=0;return{next:next,cancel:next,clearAll:clearAll};function clearAll(){frontBuffer.clear();backBuffer.clear();cancelAnimationFrame(frameToken);frameToken=0}function next(callback){backBuffer.add(callback);renderNextFrame()}function renderNextFrame(){if(!frameToken)frameToken=requestAnimationFrame(renderFrame)}function renderFrame(){frameToken=0;var t=backBuffer;backBuffer=frontBuffer;frontBuffer=t;frontBuffer.forEach(function(callback){callback()});frontBuffer.clear()}function cancel(callback){backBuffer.delete(callback)}}},{\"bezier-easing\":8}],8:[function(require,module,exports){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=.001;var SUBDIVISION_PRECISION=1e-7;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1/(kSplineTableSize-1);var float32ArraySupported=typeof Float32Array===\"function\";function A(aA1,aA2){return 1-3*aA2+3*aA1}function B(aA1,aA2){return 3*aA2-6*aA1}function C(aA1){return 3*aA1}function calcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT}function getSlope(aT,aA1,aA2){return 3*A(aA1,aA2)*aT*aT+2*B(aA1,aA2)*aT+C(aA1)}function binarySubdivide(aX,aA,aB,mX1,mX2){var currentX,currentT,i=0;do{currentT=aA+(aB-aA)/2;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0){aB=currentT}else{aA=currentT}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT}function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0){return aGuessT}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope}return aGuessT}function LinearEasing(x){return x}module.exports=function bezier(mX1,mY1,mX2,mY2){if(!(0<=mX1&&mX1<=1&&0<=mX2&&mX2<=1)){throw new Error(\"bezier x values must be in [0, 1] range\")}if(mX1===mY1&&mX2===mY2){return LinearEasing}var sampleValues=float32ArraySupported?new Float32Array(kSplineTableSize):new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2)}function getTForX(aX){var intervalStart=0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2)}else if(initialSlope===0){return guessForT}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2)}}return function BezierEasing(x){if(x===0){return 0}if(x===1){return 1}return calcBezier(getTForX(x),mY1,mY2)}}},{}],9:[function(require,module,exports){module.exports=function eventify(subject){validateSubject(subject);var eventsStorage=createEventsStorage(subject);subject.on=eventsStorage.on;subject.off=eventsStorage.off;subject.fire=eventsStorage.fire;return subject};function createEventsStorage(subject){var registeredEvents=Object.create(null);return{on:function(eventName,callback,ctx){if(typeof callback!==\"function\"){throw new Error(\"callback is expected to be a function\")}var handlers=registeredEvents[eventName];if(!handlers){handlers=registeredEvents[eventName]=[]}handlers.push({callback:callback,ctx:ctx});return subject},off:function(eventName,callback){var wantToRemoveAll=typeof eventName===\"undefined\";if(wantToRemoveAll){registeredEvents=Object.create(null);return subject}if(registeredEvents[eventName]){var deleteAllCallbacksForEvent=typeof callback!==\"function\";if(deleteAllCallbacksForEvent){delete registeredEvents[eventName]}else{var callbacks=registeredEvents[eventName];for(var i=0;i<callbacks.length;++i){if(callbacks[i].callback===callback){callbacks.splice(i,1)}}}}return subject},fire:function(eventName){var callbacks=registeredEvents[eventName];if(!callbacks){return subject}var fireArguments;if(arguments.length>1){fireArguments=Array.prototype.splice.call(arguments,1)}for(var i=0;i<callbacks.length;++i){var callbackInfo=callbacks[i];callbackInfo.callback.apply(callbackInfo.ctx,fireArguments)}return subject}}}function validateSubject(subject){if(!subject){throw new Error(\"Eventify cannot use falsy object as events subject\")}var reservedWords=[\"on\",\"fire\",\"off\"];for(var i=0;i<reservedWords.length;++i){if(subject.hasOwnProperty(reservedWords[i])){throw new Error(\"Subject cannot be eventified, since it already has property '\"+reservedWords[i]+\"'\")}}}},{}],10:[function(require,module,exports){module.exports=addWheelListener;module.exports.addWheelListener=addWheelListener;module.exports.removeWheelListener=removeWheelListener;function addWheelListener(element,listener,useCapture){element.addEventListener(\"wheel\",listener,useCapture)}function removeWheelListener(element,listener,useCapture){element.removeEventListener(\"wheel\",listener,useCapture)}},{}]},{},[1])(1)});\r\n\n\n//# sourceURL=webpack://gulp-builder-for-the-webproject/./src/js/modules/panzoom.min.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/js/modules/panzoom.min.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;